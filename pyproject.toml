[tool.poetry]
name = "recsys-gpt"
version = "0.1.0"
description = "A Foundation Model for Recommender Systems"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "recsys"}]

[tool.poetry.dependencies]
python = "^3.9"
requests = "^2.31.0"
tqdm = "^4.66.1"
typing-extensions = "^4.7.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
hypothesis = "^6.82.0"
ruff = "^0.1.0"
pre-commit = "^3.3.3"
mypy = "^1.5.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "YTT",  # flake8-2020
    "FBT",  # flake8-boolean-trap
    "Q",    # flake8-quotes
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]
# Enable autofix for all rules
fixable = ["ALL"]
unfixable = []

# Allow unused variables when they start with _
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.isort]
known-first-party = ["recsys"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"tests/*" = ["S101"]  # Use of assert in tests is fine

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
